//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ashray
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AshrayEntities : DbContext
    {
        public AshrayEntities()
            : base("name=AshrayEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CentreRegistration> CentreRegistrations { get; set; }
        public virtual DbSet<LocationDetail> LocationDetails { get; set; }
        public virtual DbSet<PatientInfo> PatientInfoes { get; set; }
        public virtual DbSet<RoleDetail> RoleDetails { get; set; }
        public virtual DbSet<StateDetail> StateDetails { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
    
        public virtual int USPInsertUpdateCentreRegistration(string centreName, string contactPerson, string mobileNumber, string email, Nullable<int> bedCount, Nullable<int> locationId, Nullable<int> stateId)
        {
            var centreNameParameter = centreName != null ?
                new ObjectParameter("CentreName", centreName) :
                new ObjectParameter("CentreName", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var bedCountParameter = bedCount.HasValue ?
                new ObjectParameter("BedCount", bedCount) :
                new ObjectParameter("BedCount", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USPInsertUpdateCentreRegistration", centreNameParameter, contactPersonParameter, mobileNumberParameter, emailParameter, bedCountParameter, locationIdParameter, stateIdParameter);
        }
    
        public virtual int USPInsertUpdatePatientInfo(string patientName, string rTPCRTestNumber, string testResult, string govtIdNumber, string patientAddress, string gender, string emergencyContactName1, string emergencyContactNumber1, string emergencyContactName2, string emergencyContactNumber2, Nullable<System.DateTime> dateTime, Nullable<int> centreId)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var rTPCRTestNumberParameter = rTPCRTestNumber != null ?
                new ObjectParameter("RTPCRTestNumber", rTPCRTestNumber) :
                new ObjectParameter("RTPCRTestNumber", typeof(string));
    
            var testResultParameter = testResult != null ?
                new ObjectParameter("TestResult", testResult) :
                new ObjectParameter("TestResult", typeof(string));
    
            var govtIdNumberParameter = govtIdNumber != null ?
                new ObjectParameter("GovtIdNumber", govtIdNumber) :
                new ObjectParameter("GovtIdNumber", typeof(string));
    
            var patientAddressParameter = patientAddress != null ?
                new ObjectParameter("PatientAddress", patientAddress) :
                new ObjectParameter("PatientAddress", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emergencyContactName1Parameter = emergencyContactName1 != null ?
                new ObjectParameter("EmergencyContactName1", emergencyContactName1) :
                new ObjectParameter("EmergencyContactName1", typeof(string));
    
            var emergencyContactNumber1Parameter = emergencyContactNumber1 != null ?
                new ObjectParameter("EmergencyContactNumber1", emergencyContactNumber1) :
                new ObjectParameter("EmergencyContactNumber1", typeof(string));
    
            var emergencyContactName2Parameter = emergencyContactName2 != null ?
                new ObjectParameter("EmergencyContactName2", emergencyContactName2) :
                new ObjectParameter("EmergencyContactName2", typeof(string));
    
            var emergencyContactNumber2Parameter = emergencyContactNumber2 != null ?
                new ObjectParameter("EmergencyContactNumber2", emergencyContactNumber2) :
                new ObjectParameter("EmergencyContactNumber2", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var centreIdParameter = centreId.HasValue ?
                new ObjectParameter("CentreId", centreId) :
                new ObjectParameter("CentreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USPInsertUpdatePatientInfo", patientNameParameter, rTPCRTestNumberParameter, testResultParameter, govtIdNumberParameter, patientAddressParameter, genderParameter, emergencyContactName1Parameter, emergencyContactNumber1Parameter, emergencyContactName2Parameter, emergencyContactNumber2Parameter, dateTimeParameter, centreIdParameter);
        }
    }
}
